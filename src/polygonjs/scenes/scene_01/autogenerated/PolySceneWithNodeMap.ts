import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// sop
import { ActorSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Actor";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { CapsuleSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Capsule";
import { ClothPrepareSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/ClothPrepare";
import { ClothSolverSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/ClothSolver";
import { EmptyObjectSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EmptyObject";
import { FileOBJSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileOBJ";
import { HemisphereLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight";
import { HierarchySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hierarchy";
import { IcosahedronSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Icosahedron";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { ObjectPropertiesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/ObjectProperties";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { RestAttributesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/RestAttributes";
import { SpotLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/SpotLight";
import { SwitchSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Switch";
import { TextSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Text";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
// mat
import { MeshBasicMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshBasic";
import { MeshPhysicalBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshPhysicalBuilder";
import { MeshPhysicalMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshPhysical";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";

export class PolySceneWithNodeMap_scene_01 extends PolyScene {
  override node(path: "/geo1"): GeoObjNode;
  override node(path: "/geo1/icosahedron1"): IcosahedronSopNode;
  override node(path: "/geo1/clothPrepare1"): ClothPrepareSopNode;
  override node(path: "/geo1/material1"): MaterialSopNode;
  override node(path: "/geo1/restAttributes1"): RestAttributesSopNode;
  override node(path: "/geo1/fileOBJ1"): FileOBJSopNode;
  override node(path: "/geo1/hierarchy1"): HierarchySopNode;
  override node(path: "/geo1/transform1"): TransformSopNode;
  override node(path: "/geo1/objectProperties1"): ObjectPropertiesSopNode;
  override node(path: "/geo1/switch_CHARACTER"): SwitchSopNode;
  override node(path: "/geo1/hierarchy2"): HierarchySopNode;
  override node(path: "/geo1/transform2"): TransformSopNode;
  override node(path: "/geo1/objectProperties2"): ObjectPropertiesSopNode;
  override node(path: "/geo1/fileOBJ2"): FileOBJSopNode;
  override node(path: "/geo1/clothPrepare2"): ClothPrepareSopNode;
  override node(path: "/geo1/capsule1"): CapsuleSopNode;
  override node(path: "/geo1/hierarchy3"): HierarchySopNode;
  override node(path: "/geo1/emptyObject1"): EmptyObjectSopNode;
  override node(path: "/geo1/clothSolver1"): ClothSolverSopNode;
  override node(path: "/geo1/MAT"): MaterialsNetworkSopNode;
  override node(path: "/geo1/MAT/meshPhysical1"): MeshPhysicalMatNode;
  override node(
    path: "/geo1/MAT/meshPhysical_CLOTH"
  ): MeshPhysicalBuilderMatNode;
  override node(
    path: "/geo1/MAT/meshPhysicalBuilder1"
  ): MeshPhysicalBuilderMatNode;
  override node(path: "/geo1/actor_clothSolver1"): ActorSopNode;
  override node(path: "/lights"): GeoObjNode;
  override node(path: "/lights/hemisphereLight1"): HemisphereLightSopNode;
  override node(path: "/lights/spotLight1"): SpotLightSopNode;
  override node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  override node(path: "/lights/merge1"): MergeSopNode;
  override node(path: "/cameras"): GeoObjNode;
  override node(
    path: "/cameras/perspectiveCamera_DEBUG"
  ): PerspectiveCameraSopNode;
  override node(
    path: "/cameras/perspectiveCamera_MAIN"
  ): PerspectiveCameraSopNode;
  override node(path: "/cameras/polarTransform1"): PolarTransformSopNode;
  override node(path: "/cameras/merge1"): MergeSopNode;
  override node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  override node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  override node(path: "/text"): GeoObjNode;
  override node(path: "/text/text1"): TextSopNode;
  override node(path: "/text/transform1"): TransformSopNode;
  override node(path: "/text/material1"): MaterialSopNode;
  override node(path: "/text/MAT"): MaterialsNetworkSopNode;
  override node(path: "/text/MAT/meshBasic1"): MeshBasicMatNode;
  override node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_scene_01 {
  "geo1--transform"?: ParamValueSerializedTypeMap["folder"];
  "geo1--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "geo1--display"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1--CAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--CSG"?: ParamValueSerializedTypeMap["folder"];
  "geo1--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "geo1--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADUnsharedEdges"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnections"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADConnectionsBetweenQuadsSharingEdge"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADConnectionsBetweenQuadsSharingPointOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADConnectionsColor"?: ParamValueSerializedTypeMap["color"];
  "geo1--QUADConnectionsColor-QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColor-QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColor-QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADEdgeCenterVectors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADEdgeNearestPointVectors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "geo1--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "geo1--TET"?: ParamValueSerializedTypeMap["folder"];
  "geo1--TetScale"?: ParamValueSerializedTypeMap["float"];
  "geo1--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "geo1--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-icosahedron1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-icosahedron1--detail"?: ParamValueSerializedTypeMap["integer"];
  "geo1-icosahedron1--pointsOnly"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-icosahedron1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-icosahedron1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-icosahedron1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-icosahedron1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-icosahedron1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-icosahedron1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-icosahedron1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-clothPrepare1--fuseDist"?: ParamValueSerializedTypeMap["float"];
  "geo1-clothPrepare1--viscosity"?: ParamValueSerializedTypeMap["float"];
  "geo1-clothPrepare1--spring"?: ParamValueSerializedTypeMap["float"];
  "geo1-material1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "geo1-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "geo1-restAttributes1--tposition"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-restAttributes1--position"?: ParamValueSerializedTypeMap["string"];
  "geo1-restAttributes1--restP"?: ParamValueSerializedTypeMap["string"];
  "geo1-restAttributes1--tnormal"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-restAttributes1--normal"?: ParamValueSerializedTypeMap["string"];
  "geo1-restAttributes1--restN"?: ParamValueSerializedTypeMap["string"];
  "geo1-fileOBJ1--url"?: ParamValueSerializedTypeMap["string"];
  "geo1-fileOBJ1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileOBJ1--reload"?: ParamValueSerializedTypeMap["button"];
  "geo1-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-objectProperties1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-objectProperties1--tname"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--name"?: ParamValueSerializedTypeMap["string"];
  "geo1-objectProperties1--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-objectProperties1--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--visible"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties1--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-switch_CHARACTER--input"?: ParamValueSerializedTypeMap["integer"];
  "geo1-switch_CHARACTER--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy2--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy2--levels"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy2--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-hierarchy2--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "geo1-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "geo1-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "geo1-objectProperties2--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-objectProperties2--tname"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--name"?: ParamValueSerializedTypeMap["string"];
  "geo1-objectProperties2--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "geo1-objectProperties2--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--visible"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-objectProperties2--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileOBJ2--url"?: ParamValueSerializedTypeMap["string"];
  "geo1-fileOBJ2--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-fileOBJ2--reload"?: ParamValueSerializedTypeMap["button"];
  "geo1-clothPrepare2--fuseDist"?: ParamValueSerializedTypeMap["float"];
  "geo1-clothPrepare2--viscosity"?: ParamValueSerializedTypeMap["float"];
  "geo1-clothPrepare2--spring"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--radius"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--height"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--divisions"?: ParamValueSerializedTypeMap["integer"];
  "geo1-capsule1--center"?: ParamValueSerializedTypeMap["vector3"];
  "geo1-capsule1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--centerx"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--centery"?: ParamValueSerializedTypeMap["float"];
  "geo1-capsule1--centerz"?: ParamValueSerializedTypeMap["float"];
  "geo1-hierarchy3--mode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy3--levels"?: ParamValueSerializedTypeMap["integer"];
  "geo1-hierarchy3--objectMask"?: ParamValueSerializedTypeMap["string"];
  "geo1-hierarchy3--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "geo1-emptyObject1--type"?: ParamValueSerializedTypeMap["string"];
  "geo1-MAT-meshPhysical1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysical1--color"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysical1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--colorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--colorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--colorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysical1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysical1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysical1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--clearcoat"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useClearCoatMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--clearcoatMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--useClearCoatNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--clearcoatNormalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--clearcoatNormalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysical1--clearcoatNormalScale-clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--clearcoatNormalScale-clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--clearcoatRoughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useClearCoatRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--clearcoatRoughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--useSheen"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--sheen"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--sheenRoughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--sheenColor"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysical1--sheenColor-sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--sheenColor-sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--sheenColor-sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useIridescence"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--iridescence"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--iridescenceIOR"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--iridescenceThicknessRange"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysical1--iridescenceThicknessRange-iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--iridescenceThicknessRange-iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useIridescenceMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--iridescenceMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--useIridescenceThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--iridescenceThicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--transmission"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useTransmissionMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--transmissionMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--ior"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--thickness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--useThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--thicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical1--attenuationDistance"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--attenuationColor"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysical1--attenuationColor-attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--attenuationColor-attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--attenuationColor-attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysical1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysical_CLOTH--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysical_CLOTH--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysical_CLOTH--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical_CLOTH--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysical_CLOTH--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoat"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useClearCoatMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--useClearCoatNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatNormalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatNormalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatNormalScale-clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatNormalScale-clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatRoughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useClearCoatRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--clearcoatRoughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--useSheen"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--sheen"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--sheenRoughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--sheenColor"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysical_CLOTH--sheenColor-sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--sheenColor-sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--sheenColor-sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useIridescence"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--iridescence"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceIOR"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceThicknessRange"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceThicknessRange-iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceThicknessRange-iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useIridescenceMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--useIridescenceThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--iridescenceThicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--transmission"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useTransmissionMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--transmissionMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--ior"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--thickness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--thicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationDistance"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationColor"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationColor-attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationColor-attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationColor-attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysical_CLOTH--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical_CLOTH--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical_CLOTH--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysical_CLOTH--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysical_CLOTH--tSize"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysical_CLOTH--tSize-tSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--tSize-tSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--tSizex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--tSizey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysical_CLOTH--tPosition0"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--tPosition1"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysical_CLOTH--tNormal"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysicalBuilder1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--opacity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--textures"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysicalBuilder1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--map"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--emissive"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysicalBuilder1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysicalBuilder1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysicalBuilder1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--metalness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--roughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoat"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useClearCoatMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--useClearCoatNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatNormalMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatNormalScale"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatNormalScale-clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatNormalScale-clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatNormalScalex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatNormalScaley"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatRoughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useClearCoatRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--clearcoatRoughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--useSheen"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--sheen"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--sheenRoughness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--sheenColor"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysicalBuilder1--sheenColor-sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--sheenColor-sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--sheenColor-sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--sheenColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--sheenColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--sheenColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useIridescence"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--iridescence"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceIOR"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceThicknessRange"?: ParamValueSerializedTypeMap["vector2"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceThicknessRange-iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceThicknessRange-iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceThicknessRangex"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceThicknessRangey"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useIridescenceMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--useIridescenceThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--iridescenceThicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--transmission"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useTransmissionMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--transmissionMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--ior"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--thickness"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useThicknessMap"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--thicknessMap"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationDistance"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationColor"?: ParamValueSerializedTypeMap["color"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationColor-attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationColor-attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationColor-attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationColorr"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationColorg"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--attenuationColorb"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "geo1-MAT-meshPhysicalBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "geo1-MAT-meshPhysicalBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--blending"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysicalBuilder1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysicalBuilder1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "geo1-MAT-meshPhysicalBuilder1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "geo1-MAT-meshPhysicalBuilder1--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-MAT-meshPhysicalBuilder1--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-actor_clothSolver1--group"?: ParamValueSerializedTypeMap["string"];
  "geo1-actor_clothSolver1--useThisNode"?: ParamValueSerializedTypeMap["boolean"];
  "geo1-actor_clothSolver1--node"?: ParamValueSerializedTypeMap["node_path"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--CAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CSG"?: ParamValueSerializedTypeMap["folder"];
  "lights--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADUnsharedEdges"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "lights--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADConnections"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADConnectionsBetweenQuadsSharingEdge"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADConnectionsBetweenQuadsSharingPointOnly"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADConnectionsColor"?: ParamValueSerializedTypeMap["color"];
  "lights--QUADConnectionsColor-QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADConnectionsColor-QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADConnectionsColor-QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADEdgeCenterVectors"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADEdgeNearestPointVectors"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "lights--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "lights--TET"?: ParamValueSerializedTypeMap["folder"];
  "lights--TetScale"?: ParamValueSerializedTypeMap["float"];
  "lights--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "lights-hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "lights-hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-spotLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-spotLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--angle"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--penumbra"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--decay"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--distance"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--helperSize"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--tmap"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--map"?: ParamValueSerializedTypeMap["node_path"];
  "lights-spotLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-spotLight1--shadow"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowUpdateOnNextRender"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowRes"?: ParamValueSerializedTypeMap["vector2"];
  "lights-spotLight1--shadowRes-shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRes-shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowBias"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowNear"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowFar"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRadius"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volumetric"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--tvolumetric"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--volAttenuation"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volAnglePower"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarching"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--raymarchingPenumbra"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarchingShadowBiasAngle"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarchingShadowBiasDistance"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--CAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CSG"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADUnsharedEdges"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADConnections"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADConnectionsBetweenQuadsSharingEdge"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADConnectionsBetweenQuadsSharingPointOnly"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADConnectionsColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--QUADConnectionsColor-QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADConnectionsColor-QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADConnectionsColor-QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADEdgeCenterVectors"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADEdgeNearestPointVectors"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "cameras--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "cameras--TET"?: ParamValueSerializedTypeMap["folder"];
  "cameras--TetScale"?: ParamValueSerializedTypeMap["float"];
  "cameras--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_DEBUG--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_DEBUG--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_DEBUG--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_DEBUG--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_DEBUG--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_DEBUG--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_DEBUG--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_MAIN--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_MAIN--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_MAIN--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_MAIN--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_MAIN--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_MAIN--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_MAIN--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "cameras-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "cameras-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "cameras-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1--group"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--zoomSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--zoomToCursor"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limits"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--minZoom"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxZoom"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--clampPosition"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin-positionMinx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin-positionMiny"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin-positionMinz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMinx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMiny"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMinz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax-positionMaxx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax-positionMaxy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax-positionMaxz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMaxx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMaxy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMaxz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--controls"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--leftMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--middleMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--rightMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--oneFingerTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--twoFingersTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--misc"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--updateTargetEndMoveEnd"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "text--transform"?: ParamValueSerializedTypeMap["folder"];
  "text--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "text--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "text--t"?: ParamValueSerializedTypeMap["vector3"];
  "text--t-tx"?: ParamValueSerializedTypeMap["float"];
  "text--t-ty"?: ParamValueSerializedTypeMap["float"];
  "text--t-tz"?: ParamValueSerializedTypeMap["float"];
  "text--tx"?: ParamValueSerializedTypeMap["float"];
  "text--ty"?: ParamValueSerializedTypeMap["float"];
  "text--tz"?: ParamValueSerializedTypeMap["float"];
  "text--r"?: ParamValueSerializedTypeMap["vector3"];
  "text--r-rx"?: ParamValueSerializedTypeMap["float"];
  "text--r-ry"?: ParamValueSerializedTypeMap["float"];
  "text--r-rz"?: ParamValueSerializedTypeMap["float"];
  "text--rx"?: ParamValueSerializedTypeMap["float"];
  "text--ry"?: ParamValueSerializedTypeMap["float"];
  "text--rz"?: ParamValueSerializedTypeMap["float"];
  "text--s"?: ParamValueSerializedTypeMap["vector3"];
  "text--s-sx"?: ParamValueSerializedTypeMap["float"];
  "text--s-sy"?: ParamValueSerializedTypeMap["float"];
  "text--s-sz"?: ParamValueSerializedTypeMap["float"];
  "text--sx"?: ParamValueSerializedTypeMap["float"];
  "text--sy"?: ParamValueSerializedTypeMap["float"];
  "text--sz"?: ParamValueSerializedTypeMap["float"];
  "text--scale"?: ParamValueSerializedTypeMap["float"];
  "text--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "text--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "text--display"?: ParamValueSerializedTypeMap["boolean"];
  "text--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "text--CAD"?: ParamValueSerializedTypeMap["folder"];
  "text--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "text--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "text--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "text--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "text--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "text--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "text--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "text--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "text--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "text--CSG"?: ParamValueSerializedTypeMap["folder"];
  "text--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "text--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "text--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "text--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "text--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "text--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "text--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "text--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADUnsharedEdges"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "text--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "text--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "text--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "text--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "text--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "text--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "text--QUADConnections"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADConnectionsBetweenQuadsSharingEdge"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADConnectionsBetweenQuadsSharingPointOnly"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADConnectionsColor"?: ParamValueSerializedTypeMap["color"];
  "text--QUADConnectionsColor-QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "text--QUADConnectionsColor-QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "text--QUADConnectionsColor-QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "text--QUADConnectionsColorr"?: ParamValueSerializedTypeMap["float"];
  "text--QUADConnectionsColorg"?: ParamValueSerializedTypeMap["float"];
  "text--QUADConnectionsColorb"?: ParamValueSerializedTypeMap["float"];
  "text--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADEdgeCenterVectors"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADEdgeNearestPointVectors"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "text--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "text--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "text--TET"?: ParamValueSerializedTypeMap["folder"];
  "text--TetScale"?: ParamValueSerializedTypeMap["float"];
  "text--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "text--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "text--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "text--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "text--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "text--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "text--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "text-text1--font"?: ParamValueSerializedTypeMap["string"];
  "text-text1--text"?: ParamValueSerializedTypeMap["string"];
  "text-text1--type"?: ParamValueSerializedTypeMap["integer"];
  "text-text1--size"?: ParamValueSerializedTypeMap["float"];
  "text-text1--extrude"?: ParamValueSerializedTypeMap["float"];
  "text-text1--segments"?: ParamValueSerializedTypeMap["integer"];
  "text-text1--bevelEnabled"?: ParamValueSerializedTypeMap["boolean"];
  "text-text1--bevelThickness"?: ParamValueSerializedTypeMap["float"];
  "text-text1--bevelSize"?: ParamValueSerializedTypeMap["float"];
  "text-text1--bevelOffset"?: ParamValueSerializedTypeMap["float"];
  "text-text1--bevelSegments"?: ParamValueSerializedTypeMap["integer"];
  "text-text1--strokeWidth"?: ParamValueSerializedTypeMap["float"];
  "text-text1--lineHeight"?: ParamValueSerializedTypeMap["float"];
  "text-text1--splitPerLetter"?: ParamValueSerializedTypeMap["boolean"];
  "text-text1--keepEmptyGeometries"?: ParamValueSerializedTypeMap["boolean"];
  "text-text1--justifyMode"?: ParamValueSerializedTypeMap["integer"];
  "text-text1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "text-text1--isCCW"?: ParamValueSerializedTypeMap["boolean"];
  "text-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "text-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "text-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "text-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "text-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "text-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "text-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "text-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "text-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "text-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "text-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "text-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "text-material1--group"?: ParamValueSerializedTypeMap["string"];
  "text-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "text-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "text-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "text-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "text-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "text-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "text-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "text-MAT-meshBasic1--default"?: ParamValueSerializedTypeMap["folder"];
  "text-MAT-meshBasic1--color"?: ParamValueSerializedTypeMap["color"];
  "text-MAT-meshBasic1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--colorr"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--colorg"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--colorb"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--opacity"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--textures"?: ParamValueSerializedTypeMap["folder"];
  "text-MAT-meshBasic1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--map"?: ParamValueSerializedTypeMap["node_path"];
  "text-MAT-meshBasic1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "text-MAT-meshBasic1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "text-MAT-meshBasic1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "text-MAT-meshBasic1--combine"?: ParamValueSerializedTypeMap["integer"];
  "text-MAT-meshBasic1--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "text-MAT-meshBasic1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "text-MAT-meshBasic1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--front"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--blending"?: ParamValueSerializedTypeMap["integer"];
  "text-MAT-meshBasic1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "text-MAT-meshBasic1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "text-MAT-meshBasic1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "text-MAT-meshBasic1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "text-MAT-meshBasic1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "text-MAT-meshBasic1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "text-MAT-meshBasic1--useFog"?: ParamValueSerializedTypeMap["boolean"];
}
